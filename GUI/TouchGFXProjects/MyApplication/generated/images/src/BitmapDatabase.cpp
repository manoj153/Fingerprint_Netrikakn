// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _Blue_Buttons_Round_Edge_icon_button_pressed[]; 
extern const unsigned char _Blue_Buttons_Round_Edge_small[]; 
extern const unsigned char _Blue_Buttons_Round_Edge_small_pressed[]; 
extern const unsigned char _Blue_Buttons_Round_icon_button[]; 
extern const unsigned char _Blue_Icons_News_32[]; 
extern const unsigned char _Blue_Icons_User_48[]; 
extern const unsigned char _Blue_Icons_eMail_48[]; 
extern const unsigned char _Dark_Icons_Alert_32[]; 
extern const unsigned char _Dark_Icons_Back_arrow_32[]; 
extern const unsigned char _Under_Construction_PNG[]; 
extern const unsigned char _manoj_png[]; 
extern const unsigned char _whtasapp_icon_png[]; 

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { _Blue_Buttons_Round_Edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Buttons_Round_Edge_small, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Buttons_Round_Edge_small_pressed, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Buttons_Round_icon_button, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Icons_News_32, 0, 30, 26, 5, 3, 3, 23, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Icons_User_48, 0, 46, 46, 6, 43, 34, 3, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Icons_eMail_48, 0, 46, 45, 12, 38, 22, 7, touchgfx::Bitmap::ARGB8888 },
    { _Dark_Icons_Alert_32, 0, 48, 41, 27, 18, 11, 21, touchgfx::Bitmap::ARGB8888 },
    { _Dark_Icons_Back_arrow_32, 0, 19, 32, 4, 11, 4, 8, touchgfx::Bitmap::ARGB8888 },
    { _Under_Construction_PNG, 0, 1600, 900, 0, 0, 1600, 900, touchgfx::Bitmap::RGB565 },
    { _manoj_png, 0, 286, 286, 0, 0, 286, 286, touchgfx::Bitmap::RGB565 },
    { _whtasapp_icon_png, 0, 1000, 1000, 186, 172, 639, 639, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
  const touchgfx::Bitmap::BitmapData* getInstance()
  {
    return bitmap_database;
  }
  uint16_t getInstanceSize()
  {
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
  }
}

